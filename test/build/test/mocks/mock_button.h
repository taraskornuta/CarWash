/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_BUTTON_H
#define _MOCK_BUTTON_H

#include "unity.h"
#include "button.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_button_Init(void);
void mock_button_Destroy(void);
void mock_button_Verify(void);




#define Button_Init_IgnoreAndReturn(cmock_retval) Button_Init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Button_Init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int8_t cmock_to_return);
#define Button_Init_ExpectAndReturn(init, instance, count, cmock_retval) Button_Init_CMockExpectAndReturn(__LINE__, init, instance, count, cmock_retval)
void Button_Init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, btn_init_t* init, btn_instance_t* instance, uint8_t count, int8_t cmock_to_return);
typedef int8_t (* CMOCK_Button_Init_CALLBACK)(btn_init_t* init, btn_instance_t* instance, uint8_t count, int cmock_num_calls);
void Button_Init_AddCallback(CMOCK_Button_Init_CALLBACK Callback);
void Button_Init_Stub(CMOCK_Button_Init_CALLBACK Callback);
#define Button_Init_StubWithCallback Button_Init_Stub
#define Button_Update_Ignore() Button_Update_CMockIgnore()
void Button_Update_CMockIgnore(void);
#define Button_Update_Expect() Button_Update_CMockExpect(__LINE__)
void Button_Update_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Button_Update_CALLBACK)(int cmock_num_calls);
void Button_Update_AddCallback(CMOCK_Button_Update_CALLBACK Callback);
void Button_Update_Stub(CMOCK_Button_Update_CALLBACK Callback);
#define Button_Update_StubWithCallback Button_Update_Stub
#define Button_EventGet_IgnoreAndReturn(cmock_retval) Button_EventGet_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Button_EventGet_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, btn_state_t cmock_to_return);
#define Button_EventGet_ExpectAndReturn(key, cmock_retval) Button_EventGet_CMockExpectAndReturn(__LINE__, key, cmock_retval)
void Button_EventGet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t key, btn_state_t cmock_to_return);
typedef btn_state_t (* CMOCK_Button_EventGet_CALLBACK)(uint8_t key, int cmock_num_calls);
void Button_EventGet_AddCallback(CMOCK_Button_EventGet_CALLBACK Callback);
void Button_EventGet_Stub(CMOCK_Button_EventGet_CALLBACK Callback);
#define Button_EventGet_StubWithCallback Button_EventGet_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
